#!/bin/sh

# remove old CSV from temp directory
rm -f /mnt/tmp/ios13.csv

# attempted hack for not running as cron job?
sudo chmod 0755 ios_query.sql

# invoke script to project, filter, and bin data @ 19m resolution
psql -U deploy -h localhost safecastapi -f ios_query.sql

# CSV parsing: 1MB/s.  SQLite3 sequential read: 30MB/s.   Hmmm...
# note this offsets the z value by -32768 for storage as 16-bit signed integer, must shift back when reading later
cd /mnt/tmp
rm -f /mnt/tmp/ios13.sqlite
echo -e "PRAGMA journal_mode=OFF;PRAGMA page_size=16384;CREATE TABLE ImpTemp(X VARCHAR(32), Y VARCHAR(32), Z VARCHAR(32));CREATE TABLE Grid1(X INT, Y INT, Z INT);\n.separator ','\n.import ios13.csv ImpTemp\nINSERT INTO Grid1(X,Y,Z) SELECT CAST(X AS INT), CAST(Y AS INT), CAST(CAST(Z AS INT)-32768 AS INT) FROM ImpTemp;DROP TABLE ImpTemp;VACUUM;" | sqlite3 ios13.sqlite
rm -f /data/safecastapi/shared/system/ios13.sqlite

# mv changed to cp due to problems with SQLite3 DB having empty table... but only in auto job run, not manual (?)
# TODO: investigate further

cp /mnt/tmp/ios13.sqlite /data/safecastapi/shared/system/ios13.sqlite

# NOT removing file here; seemed to result in empty table in SQLite3 export db (???)
# TODO: investigate further
# rm -f /mnt/tmp/ios13.csv

# Note: Should eventually use gzip to compress sqlite database once I can find way to decompress in iOS that is
#       not memory-bound.




# Uncomment below to enable CSV export.  Also, comment out the CSV's rm above.

# restore old directory
#cd /data/safecastapi/current/script

#echo "x,y,z" | cat - /mnt/tmp/ios13.csv > /data/safecastapi/shared/system/ios13-out.csv
#cd /data/safecastapi/shared/system && tar -czf ios13-out.tar.gz ios13-out.csv
#mv ios13-out.tar.gz ios13.tar.gz && mv ios13-out.csv ios13.csv
