\d image_sets
\d images
\t
\h
show tables;
\tables
\?
CREATE TABLE "section_translations" ("id" serial primary key, "section_id" integer, "locale" character varying(255), "content" text, "title" character varying(255), "created_at" timestamp, "updated_at" timestamp);
\dt
drop table section_translations;
SELECT  "sections".* FROM "sections" INNER JOIN "section_translations" ON "section_translations"."section_id" = "sections"."id" WHERE "translations"."locale" = 'en' ORDER BY title LIMIT 30 OFFSET 0
;
\dt translations;
\d workshops
\d posts
\d images
\d workshops
\d users_workshops;
create role CREATE USER elabs WITH PASSWORD 'elabs';
CREATE USER elabs WITH PASSWORD 'elabs';
GRANT ALL PRIVILEGES TO elabs;
GRANT ALL PRIVILEGES T 'elabs';
GRANT ALL PRIVILEGES ON spodme to 'elabs';
create role delete use
;
delete user 'elabs';
delete user 'elabs';
destroy user 'elabs';
drop user elabs;
drop user elabs;
show tables;
\t
\h
table
;
show tables;
describe tables;
desc tables;
\d
\d events;
\d user
\d users
\d events
select restaurants.* from restaurants;
select restaurants.* from restaurants where (approved = 't');
select restaurants.* from restaurants where (approved = 't') and (restaurants.name = '1');
select restaurants.* from restaurants where (approved = 't') and ((restaurants.name || ' ' || city) = '1');
select restaurants.* from restaurants where (approved = 't') and ((restaurants.name || ' ' || city) = '1');
update restaurants set approved = 't';
select restaurants.* from restaurants where (approved = 't') and ((restaurants.name || ' ' || city) = '1');
select restaurants.* from restaurants where (approved = 't') and ((restaurants.name || ' ' || city) LIKE 'Dublin');
select restaurants.* from restaurants where (approved = 't') and ((restaurants.name || ' ' || city) LIKE '%Dublin');
select restaurants.* from restaurants where (approved = 't') and ((restaurants.name || ' ' || city) LIKE '%Dublin%');
select restaurants.* from restaurants where (approved = 't') and ((restaurants.name || ' ' || city) SIMILAR TO '%Dublin%');
select restaurants.* from restaurants where (approved = 't') and ((restaurants.name || ' ' || city) SIMILAR TO '%Dublin%') \G
select restaurants.* from restaurants where (approved = 't') and ((restaurants.name || ' ' || city) SIMILAR TO '%Dublin%') \G
select restaurants.* from restaurants where (approved = 't') and ((restaurants.name || ' ' || city) SIMILAR TO '%Dublin%') \g
select restaurants.* from restaurants where (approved = 't') and ((restaurants.name || ' ' || city) LIKE '%Dublin%');
\d restaurants;
select name || " " || address from restaurants;
select name | " " | address from restaurants;
select * from restaurants;
select * from restaurants where name || address like 'Dublin';
select * from restaurants where name || address || city like 'Dublin';
\t
\h
\?
\d
select * from videos;
select count(*) from news_items;
select count(*) from videos;
select count(*) from slugs;
\d users;
select authentication_token from users;
update users set authentication_token = 'letmein';
select * from measurements;
\d measurements
\d measurements;
\d measurements
\t
\h
\d
\dt
\d measurements'
\d measurements;
\t
\dt
\d users;
\dt
\d measurements;
\dt
\d users
select * from users;
select * from users where email ='paul@rslw.com';
\dt
use safecast_test;
use safecast_test
\dt
\dt
delete from schema_migrations where version = '20111214134716';
select * from users;
truncate table users;
truncate table users;
truncate table users;
truncate table users;
truncate table users;
truncate table users;
truncate table measurements;
\d measurement_imports;
\d measurements
\d measurements;
\d bgeigie_imports;
\d bgeigie_imports
\d bgeigie_logs
select * from bgeigie_logs;
truncate table measurements;
SELECT version();
show tables;
\dt
create temporary table bgeigie_logs_tmp;
create temporary table bgeigie_logs_tmp like bgeigie_logs;
create temporary table bgeigie_logs_tmp like bgeigie_logs including defaults;
create temporary table bgeigie_logs_tmp (like bgeigie_logs);
drop table bgeigie_logs_tmp;
create temporary table bgeigie_logs_tmp (like bgeigie_logs including defaults);
drop table bgeigie_logs_tmp;
\d bgeigie_imports
;
\d bgeigie_imports;
\d measurement_imports;
\d measurements;
insert into measurements select * from bgeigie_logs;
insert into measurements (id) select id  from bgeigie_logs;
insert into measurements (user_id, unit) select (1,2)  from bgeigie_logs;
insert into measurements (user_id, unit) select (1,'123')  from bgeigie_logs;
insert into measurements (user_id, unit) select *  from bgeigie_logs;
insert into measurements (user_id) select 1  from bgeigie_logs;
insert into measurements (user_id) select 1,2  from bgeigie_logs;
insert into measurements (user_id) select id,cpm  from bgeigie_logs;
insert into measurements (user_id, value) select id,cpm  from bgeigie_logs;
insert into measurements (user_id, value, unit) select 1,cpm,'cpm'  from bgeigie_logs;
select * from users;
select * from users;
truncate table users;
select * from users;
select * from users;
truncate table users;
select * from users;
truncate table users;
select * from measurements;
truncate table measurements;
drop table safecast_test;
select now()
;
\s bgeigie_logs;
\s bgeigie_logs
